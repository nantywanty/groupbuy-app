{"ast":null,"code":"var _jsxFileName = \"/groupbuy-app/frontend/src/components/Login.js\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwtDecode from 'jwt-decode';\nimport { NavDropdown } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.user ?\n    /*#__PURE__*/\n    // User logged in\n    _jsxDEV(NavDropdown, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.user.picture,\n          className: \"rounded-circle\",\n          height: 30,\n          alt: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this), props.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n        onClick: () => props.setUser(null),\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // User not logged in\n    _jsxDEV(GoogleLogin, {\n      onSuccess: credentialResponse => {\n        if (credentialResponse.credential != null) {\n          const new_user = jwtDecode(credentialResponse.credential);\n          props.setUser(new_user);\n        }\n      },\n      onError: () => {\n        console.log('Login Failed');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n// Decoded Google credentialResponse\n// aud: string,\n// azp: string,\n// email: string,\n// email_verified: boolean,\n// exp: number,\n// family_name: string,\n// given_name: string,\n// iss: string,\n// jti: string,\n// name: string,\n// nbf: number,\n// picture: string,\n// sub: string\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleLogin","jwtDecode","NavDropdown","jsxDEV","_jsxDEV","Login","props","children","user","title","className","src","picture","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","Item","onClick","setUser","onSuccess","credentialResponse","credential","new_user","onError","console","log","_c","$RefreshReg$"],"sources":["/groupbuy-app/frontend/src/components/Login.js"],"sourcesContent":["import { GoogleLogin } from '@react-oauth/google';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { NavDropdown } from 'react-bootstrap';\r\n\r\nexport default function Login(props) {\r\n\r\n    return (\r\n        <div>\r\n            { props.user ? (\r\n                // User logged in\r\n                <NavDropdown title = {\r\n                    <div className=\"d-flex gap-2\">\r\n                        <img src={props.user.picture} className=\"rounded-circle\" height={30} alt=\"user\"></img>\r\n                        {props.user.name}\r\n                    </div>\r\n                }>\r\n                    <NavDropdown.Item onClick={() => props.setUser(null)}>Sign out</NavDropdown.Item>\r\n                </NavDropdown>\r\n                \r\n            ) : (\r\n                // User not logged in\r\n                <GoogleLogin\r\n                    onSuccess={credentialResponse => {\r\n                        if (credentialResponse.credential != null) {\r\n                            const new_user = jwtDecode(credentialResponse.credential);\r\n                            props.setUser(new_user);\r\n                            \r\n                        }\r\n                    }}\r\n                    onError={() => {\r\n                        console.log('Login Failed');\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n// Decoded Google credentialResponse\r\n// aud: string,\r\n// azp: string,\r\n// email: string,\r\n// email_verified: boolean,\r\n// exp: number,\r\n// family_name: string,\r\n// given_name: string,\r\n// iss: string,\r\n// jti: string,\r\n// name: string,\r\n// nbf: number,\r\n// picture: string,\r\n// sub: string"],"mappings":";AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EAEjC,oBACIF,OAAA;IAAAG,QAAA,EACMD,KAAK,CAACE,IAAI;IAAA;IACR;IACAJ,OAAA,CAACF,WAAW;MAACO,KAAK,eACdL,OAAA;QAAKM,SAAS,EAAC,cAAc;QAAAH,QAAA,gBACzBH,OAAA;UAAKO,GAAG,EAAEL,KAAK,CAACE,IAAI,CAACI,OAAQ;UAACF,SAAS,EAAC,gBAAgB;UAACG,MAAM,EAAE,EAAG;UAACC,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,EACrFZ,KAAK,CAACE,IAAI,CAACW,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEvB;MAAAX,QAAA,eACGH,OAAA,CAACF,WAAW,CAACkB,IAAI;QAACC,OAAO,EAAEA,CAAA,KAAMf,KAAK,CAACgB,OAAO,CAAC,IAAI,CAAE;QAAAf,QAAA,EAAC;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAmB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvE;IAAA;IAGd;IACAd,OAAA,CAACJ,WAAW;MACRuB,SAAS,EAAEC,kBAAkB,IAAI;QAC7B,IAAIA,kBAAkB,CAACC,UAAU,IAAI,IAAI,EAAE;UACvC,MAAMC,QAAQ,GAAGzB,SAAS,CAACuB,kBAAkB,CAACC,UAAU,CAAC;UACzDnB,KAAK,CAACgB,OAAO,CAACI,QAAQ,CAAC;QAE3B;MACJ,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAM;QACXC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC/B;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAET;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAY,EAAA,GA/CwBzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}